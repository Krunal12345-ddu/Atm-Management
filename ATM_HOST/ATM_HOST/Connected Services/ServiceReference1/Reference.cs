//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ATM_HOST.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IATMWITHDRAW")]
    public interface IATMWITHDRAW {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMWITHDRAW/get_balance", ReplyAction="http://tempuri.org/IATMWITHDRAW/get_balanceResponse")]
        int get_balance(int Acc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMWITHDRAW/get_balance", ReplyAction="http://tempuri.org/IATMWITHDRAW/get_balanceResponse")]
        System.Threading.Tasks.Task<int> get_balanceAsync(int Acc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMWITHDRAW/ChangePin", ReplyAction="http://tempuri.org/IATMWITHDRAW/ChangePinResponse")]
        void ChangePin(int Acc, int newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMWITHDRAW/ChangePin", ReplyAction="http://tempuri.org/IATMWITHDRAW/ChangePinResponse")]
        System.Threading.Tasks.Task ChangePinAsync(int Acc, int newPin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMWITHDRAW/InsertAccount", ReplyAction="http://tempuri.org/IATMWITHDRAW/InsertAccountResponse")]
        void InsertAccount(int accNum, string accName, string faName, System.DateTime dob, string phone, string address, string education, string occupation, string pin, int balance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMWITHDRAW/InsertAccount", ReplyAction="http://tempuri.org/IATMWITHDRAW/InsertAccountResponse")]
        System.Threading.Tasks.Task InsertAccountAsync(int accNum, string accName, string faName, System.DateTime dob, string phone, string address, string education, string occupation, string pin, int balance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMWITHDRAW/ValidateLogin", ReplyAction="http://tempuri.org/IATMWITHDRAW/ValidateLoginResponse")]
        bool ValidateLogin(int accNum, int pin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IATMWITHDRAW/ValidateLogin", ReplyAction="http://tempuri.org/IATMWITHDRAW/ValidateLoginResponse")]
        System.Threading.Tasks.Task<bool> ValidateLoginAsync(int accNum, int pin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IATMWITHDRAWChannel : ATM_HOST.ServiceReference1.IATMWITHDRAW, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ATMWITHDRAWClient : System.ServiceModel.ClientBase<ATM_HOST.ServiceReference1.IATMWITHDRAW>, ATM_HOST.ServiceReference1.IATMWITHDRAW {
        
        public ATMWITHDRAWClient() {
        }
        
        public ATMWITHDRAWClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ATMWITHDRAWClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ATMWITHDRAWClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ATMWITHDRAWClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int get_balance(int Acc) {
            return base.Channel.get_balance(Acc);
        }
        
        public System.Threading.Tasks.Task<int> get_balanceAsync(int Acc) {
            return base.Channel.get_balanceAsync(Acc);
        }
        
        public void ChangePin(int Acc, int newPin) {
            base.Channel.ChangePin(Acc, newPin);
        }
        
        public System.Threading.Tasks.Task ChangePinAsync(int Acc, int newPin) {
            return base.Channel.ChangePinAsync(Acc, newPin);
        }
        
        public void InsertAccount(int accNum, string accName, string faName, System.DateTime dob, string phone, string address, string education, string occupation, string pin, int balance) {
            base.Channel.InsertAccount(accNum, accName, faName, dob, phone, address, education, occupation, pin, balance);
        }
        
        public System.Threading.Tasks.Task InsertAccountAsync(int accNum, string accName, string faName, System.DateTime dob, string phone, string address, string education, string occupation, string pin, int balance) {
            return base.Channel.InsertAccountAsync(accNum, accName, faName, dob, phone, address, education, occupation, pin, balance);
        }
        
        public bool ValidateLogin(int accNum, int pin) {
            return base.Channel.ValidateLogin(accNum, pin);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateLoginAsync(int accNum, int pin) {
            return base.Channel.ValidateLoginAsync(accNum, pin);
        }
    }
}
